package Vistas;

import javax.swing.*;
import java.text.SimpleDateFormat;
import java.util.Date;
/**
 *
 * @author Erick
 */
public class AgendarCita extends javax.swing.JFrame {
    
    
    /*private JComboBox<String> cmbEspecialidad;
    private JComboBox<String> cmbMedico;
    private JDateChooser dateChooser;
    private JTextField txtMotivoConsulta;
    private JComboBox<String> cmbEstadoCita;

    /**
     * Creates new form AgendarCita
     */
    
    public AgendarCita() {
        initComponents();
        cargarMedicos();  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        txtCedulaPaciente = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbEspecialidad = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jButton_BuscarHorarios = new javax.swing.JButton();
        dateChooser = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaHorarios = new javax.swing.JTable();
        jButton_AgendarCita = new javax.swing.JButton();
        cmbMedico = new javax.swing.JComboBox<>();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Agendamiento de citas Medicas");

        jLabel1.setText("Cédula del Paciente:");

        jLabel2.setText("Especialidad Médica:");

        cmbEspecialidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Especialidad", "Cardiología", "Dermatología", "Pediatría", "General" }));
        cmbEspecialidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbEspecialidadActionPerformed(evt);
            }
        });

        jLabel3.setText("Médico:");

        jButton_BuscarHorarios.setText("Buscar Horarios");
        jButton_BuscarHorarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_BuscarHorariosActionPerformed(evt);
            }
        });

        jLabel4.setText("Fecha:");

        tablaHorarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Hora", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaHorarios.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tablaHorarios);

        jButton_AgendarCita.setText("Agendar Cita");
        jButton_AgendarCita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AgendarCitaActionPerformed(evt);
            }
        });

        cmbMedico.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton_BuscarHorarios)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(dateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtCedulaPaciente)
                                    .addComponent(cmbEspecialidad, 0, 212, Short.MAX_VALUE)
                                    .addComponent(cmbMedico, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(37, 37, 37))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(212, 212, 212)
                .addComponent(jButton_AgendarCita)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCedulaPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(cmbMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(26, 26, 26)
                .addComponent(jButton_BuscarHorarios)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton_AgendarCita)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_BuscarHorariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_BuscarHorariosActionPerformed
        buscarHorarios();
    }//GEN-LAST:event_jButton_BuscarHorariosActionPerformed

    private void cmbEspecialidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbEspecialidadActionPerformed
        // TODO add your handling code here:
        cargarMedicos();
    }//GEN-LAST:event_cmbEspecialidadActionPerformed

    private void jButton_AgendarCitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AgendarCitaActionPerformed
        // TODO add your handling code here:
        String cedula = (String) txtCedulaPaciente.getText();
        String medico = (String) cmbMedico.getSelectedItem();
        String especialidad = (String) cmbEspecialidad.getSelectedItem();
        
        Date fechaSelec = dateChooser.getDate();
        SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy");
        String fechaEnString = formatoFecha.format(fechaSelec);
        
        if (cedula == null || cedula.trim().isEmpty() ||fechaEnString == null || medico == null || especialidad == null) {
            JOptionPane.showMessageDialog(AgendarCita.this, "Por favor complete los campos de cedula, especialidad, médico y fecha.");
            return;
        }else{
            int selectedRow = tablaHorarios.getSelectedRow();
                if (selectedRow != -1) {
                    String hora = (String) tablaHorarios.getValueAt(selectedRow, 0);
                    String estado = (String) tablaHorarios.getValueAt(selectedRow, 1);
                    if ("Libre".equals(estado)) {
                        int resAgendar = JOptionPane.showConfirmDialog(AgendarCita.this, "Cita agendada para paciente con:\n Cedula: " 
                                + cedula + "\nen: \n Especialidad: " + especialidad + "\n Medico: " + medico + "\n Fecha: " + fechaEnString 
                                + "\n Hora: " + hora, 
                                "Confirmar Agendamiento", JOptionPane.OK_CANCEL_OPTION,
                                JOptionPane.INFORMATION_MESSAGE);
                        
                        if(resAgendar == JOptionPane.OK_OPTION){
                            tablaHorarios.setValueAt("Ocupado", selectedRow, 1); // Actualizar estado a Ocupado
                        }
                        
                    } else {
                        JOptionPane.showMessageDialog(AgendarCita.this, "El horario ya está ocupado.");
                    }
                } else {
                    JOptionPane.showMessageDialog(AgendarCita.this, "Por favor seleccione un horario.");
                }
        }
         
    }//GEN-LAST:event_jButton_AgendarCitaActionPerformed

    
    private void cargarMedicos() {
        String especialidad = (String) cmbEspecialidad.getSelectedItem();
        cmbMedico.removeAllItems();

        switch (especialidad) {
            case "Cardiología":
                cmbMedico.addItem("Dr. Carlos Pérez");
                cmbMedico.addItem("Dra. Ana Martínez");
                break;
            case "Dermatología":
                cmbMedico.addItem("Dra. Laura Gómez");
                break;
            case "Pediatría":
                cmbMedico.addItem("Dr. Luis Fernández");
                cmbMedico.addItem("Dra. María López");
                break;
            case "General":
                cmbMedico.addItem("Dr. José Ramírez");
                break;
        }
    }
    
    
    private void buscarHorarios() {
        String medico = (String) cmbMedico.getSelectedItem();
        java.util.Date fecha = dateChooser.getDate();

        // 1. Validaciones iniciales
        if (fecha == null || medico == null || medico.isEmpty()) { // Añadido check para medico.isEmpty()
            JOptionPane.showMessageDialog(this, "Por favor seleccione un médico y una fecha válidos.", "Error de Selección", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // 2. Obtener el modelo de la tabla
        // Necesitamos el DefaultTableModel de tu JTable llamada 'tablaHorarios'.
        // Asegúrate de que tablaHorarios ya esté inicializada en initComponents() o en tu constructor.
        javax.swing.table.DefaultTableModel modeloTabla = (javax.swing.table.DefaultTableModel) tablaHorarios.getModel();

        // 3. Limpiar la tabla de datos anteriores
        // Esto remueve todas las filas existentes en el modelo.
        modeloTabla.setRowCount(0);

        // 4. Simular horarios (8:00 AM a 5:00 PM)
        String[] horas = {
                "08:00 AM", "09:00 AM", "10:00 AM", "11:00 AM",
                "12:00 PM", "01:00 PM", "02:00 PM", "03:00 PM", "04:00 PM"
        };

        // 5. Simular y añadir filas al modelo de la tabla
        for (String hora : horas) {
            boolean ocupado = Math.random() > 0.5; // Simulación aleatoria
            String estado = ocupado ? "Ocupado" : "Libre";

            // Se crea un array de objetos para representar la fila.
            // La tabla tendrá dos columnas: Hora y Estado.
            Object[] fila = {hora, estado}; 
            modeloTabla.addRow(fila); // Añade la fila al modelo de la tabla.
        }

        // 6. Asegurar la visibilidad y actualización de la tabla (si es necesario)
        // Asumo que 'scrollTabla' es el JScrollPane que contiene 'tablaHorarios'.
        // Si 'scrollTabla' está dentro de un panel que ya es visible, estas líneas podrían no ser estrictamente necesarias,
        // pero no hacen daño si quieres asegurarte.
        if (jScrollPane2 != null) {
            jScrollPane2.setVisible(true);
    }
    
    // Estos son para asegurar que la UI se redibuje correctamente.
    // Solo son necesarios si has cambiado la visibilidad o tamaño del componente.
    revalidate(); // Recalcula el layout de los componentes
    repaint();    // Redibuja los componentes
}
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgendarCita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgendarCita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgendarCita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgendarCita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgendarCita().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbEspecialidad;
    private javax.swing.JComboBox<String> cmbMedico;
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JButton jButton_AgendarCita;
    private javax.swing.JButton jButton_BuscarHorarios;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tablaHorarios;
    private javax.swing.JTextField txtCedulaPaciente;
    // End of variables declaration//GEN-END:variables
}
